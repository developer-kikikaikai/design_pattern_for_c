# abstract
  Proxy pattern: Create new interface class which has old interface. New class adds something, and call old interface.
                 So user can add new functions in same interface easily.

# In the C
  C language have some override method to update function without rename as Proxy pattern.
  So C language already has solutions solved by it.


# Sample
  sample1: to switch #sample1_CFLAGS += -DPROXY in Makefile.am, the behavior of "testfunc" will change in the sample1 program.
  sample2: to call ./sample2 <filename> or fopenProxy.sh <filename> script, the behavior of "fopen" will change. Only different "Environment variable".

# Reference
  sample2: https://qiita.com/koara-local/items/221508d4691c4502adce
  (Japanese website)

