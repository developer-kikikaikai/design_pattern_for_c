# What's design_pattern_for_c?
  Libraries package for Linux C language to show some design patterns.

  Some C systems uses class design as them. And sometimes, this code is different from an image of object-oriented programming.

  Because "*C system shows efficient design patterns with Goodness of C language*".

  In other words, *C system mix a strong point of design patterns and C language (not just an imitation of patterns)*. 

  This package may helps you to use some design patterns with Goodness of C language.

# How to use
  Download:
  Please download from [here](https://github.com/developer-kikikaikai/design_pattern_for_c/releases).

  Build:
  1. ./configure
  2. make
  3. sudo make install

  Headers and libraries are installed in prefix dir (default: /usr/local/)

  To use Threadpool, please install libevent (event2).
   apt install libevent or compile by github code https://github.com/libevent/libevent/tree/master/

# Latest Version 
 v0.0.1 pre-release.
 Please see [here](https://github.com/developer-kikikaikai/design_pattern_for_c/releases).

# Support libraries

latest version

- Builder
- Singleton (contained in Flyweight)
- Flyweight
- Chain of Responsibility 
- Observer(Publish-Subscribe) 
- State 

Next version

- Threadpool (with File disctriptor)  (add in master)
- Memorypool (add in master)
- Prototype (add in master)

Almost of other pattern will create sample.

# Detail: all design pattern libraries

*Not yet* means planning now

Related to Create:

  |name            |support| exist sample  |  other             |
  |:---------------|:-----:|:-------------:|:------------------:|
  |Builder         |  Yes  | see builder   |                    |
  |Singleton       |  Yes  | see flyweight | wrap in Flyweight  |
  |Prototype       |  Yes  | see prototype |                    |
  |Abstract Factory|  No   | create future |                    |
  |Factory Method  |  No   | create future |                    |

Related to Construct:

  |name            |support| exist sample  |  other                                     |
  |:---------------|:-----:|:-------------:|:------------------------------------------:|
  |Flyweight       |  Yes  | see flyweight |                                            |
  |Adapter         |  No   | create future |                                            |
  |Bridge          |  No   | create future |                                            |
  |Composite       |  No   |   No          | Please use a tree or a list as dp_list.h   |
  |Decorator       |  No   | create future |                                            |
  |Facade          |  No   | create future |                                            |
  |Proxy           |  No   | see proxy     | Please switch by library/dlopen/LD_PRELOAD |

Related to Behavior:

  |name                        |support| exist sample              |  other                        |
  |:---------------------------|:-----:|:-------------------------:|:-----------------------------:|
  |Chain of Responsibility     |  Yes  | see ChainOfResponsibility |                               |
  |Observer(Publish-Subscribe) |  Yes  | see publisher             |                               |
  |State                       |  Yes  | see state                 | State and StateMachine lib    |
  |Command                     |Not yet| create future             |                               |
  |Mediator                    |  No   | see mediator              |                               |
  |Interpreter                 |  No   | No                        | There is no skill             |
  |Iterator                    |  No   | No                        | Please use list as dp_list.h  |
  |Memento                     |  No   | create future             |                               |
  |Strategy                    |  No   | create future             |                               |
  |Template Method             |  No   | Not yet                   |                               |
  |Visitor                     |  No   | create future             |                               |

Related to Multi thread:

  |name                        |support| exist sample              |  other                        |
  |:---------------------------|:-----:|:-------------------------:|:-----------------------------:|
  |Threadpool                  |  Yes  | see threadpool            |                               |

Other:

  |name                        |support| exist sample              |  other                        |
  |:---------------------------|:-----:|:-------------------------:|:-----------------------------:|
  |Memorypool                  |  Yes  | see memorypool            | Also it can use as Prototype  |

  If you want to see detail, please see [here](https://qiita.com/developer-kikikaikai/items/8e7858c130c8ae8df488) (Japanese website) 

# Detail of libraries code

If you want to see detail of code, please see [doxgen file in here](https://developer-kikikaikai.github.io/design_pattern_for_c_doc/docs/)

# License
  This software is released under the MIT License, see [LICENSE file in this package](https://github.com/developer-kikikaikai/design_pattern_for_c/blob/master/LICENSE).


